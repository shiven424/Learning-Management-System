syntax = "proto3";

package lms;

// ---- LMS Service Definitions ----
service LMS {
    rpc Register(RegisterRequest) returns (StatusResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Logout(LogoutRequest) returns (StatusResponse);
    rpc Upload(UploadFileRequest) returns (UploadFileResponse);
    rpc Download(DownloadFileRequest) returns (DownloadFileResponse);
    rpc Post(PostRequest) returns (StatusResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc GetStudents(GetStudentsRequest) returns (GetStudentsResponse);
    rpc GetTeachers(GetTeachersRequest) returns (GetTeachersResponse);
}

// ---- Raft Service Definitions ----
service RaftService {
    rpc RequestVote (VoteRequest) returns (VoteResponse);  // Request for votes in leader election
    rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse);  // Append logs
    rpc GetLeader (Empty) returns (LeaderInfo);  // Get current leader info
    rpc UploadFileAll(UploadFileAllRequest) returns (UploadFileAllResponse); // Upload files
}

// ---- LMS Message Definitions ----
message RegisterRequest {
    string username = 1;
    string password = 2;
    string role = 3;  // student or teacher
    string name = 4;
}

message LoginRequest {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    string status = 1;
    string token = 2;
    string role = 3;
}

message LogoutRequest {
    string token = 1;
}

message StatusResponse {
    string status = 1;
    string error_code = 2;
    string id = 3;
}

message UploadFileRequest {
    string token = 1;
    string filename = 2;
    bytes data = 3;
}

message UploadFileResponse {
    string status = 1;
    string file_path = 2;
    string file_id = 3;
}

message DownloadFileRequest {
    string token = 1;
    string file_path = 2;
}

message DownloadFileResponse {
    string status = 1;
    bytes data = 2;
}

message AssignmentData {
    string student_name = 1;
    string teacher_name = 2;
    string filename = 3;
    string file_path = 4;
    string grade = 5;
    string feedback_text = 6;
    string submission_date = 7;
    string assignment_id = 8;
    string file_id = 9;
}

message FeedbackData {
    string student_name = 1;
    string teacher_name = 2;
    string feedback_text = 3;
    string submission_date = 4;
    string feedback_id = 5;
}

message CourseMaterial {
    string teacher_name = 1;
    string course_name = 2;
    string filename = 3;
    string file_path = 4;
    string material_id = 5;
    string upload_date = 6;
    string file_id = 7;
    bytes file_content = 8;
}

message AssignmentUpdate {
    string grade = 1;
    string feedback_text = 2;
    string assignment_id = 3;
}

message Query {
    string student_name = 1;
    string teacher_name = 2;
    string query_text = 3;
    string query_type = 4;
    string date = 5;
    string context_file_path = 6;
    string status = 7;
    string answer_text = 8;
    string query_id = 9;
}

message PostRequest {
    string token = 1;
    oneof data_type {
        AssignmentData assignment = 2;
        FeedbackData student_feedback = 3;
        CourseMaterial content = 4;
        AssignmentUpdate assignment_update = 5;
        Query query = 6;
    }
}

message GetRequest {
    string token = 1;
    oneof data_type {
        AssignmentData assignment = 2;
        FeedbackData feedback = 3;
        CourseMaterial content = 4;
        Query query_last = 5;
        Query query_teacher = 6;
    }
}

message GetResponse {
    string status = 1;
    repeated AssignmentData assignment_items = 2;
    repeated FeedbackData feedback_items = 3;
    repeated CourseMaterial course_items = 4;
    repeated Query query_items = 5;
}

message GetStudentsRequest {
    string token = 1;
}

message GetStudentsResponse {
    repeated Student students = 1;
}

message Student {
    string username = 1;
    string name = 2;
}

message GetTeachersRequest {
    string token = 1;
}

message GetTeachersResponse {
    repeated Teacher teachers = 1;
}

message Teacher {
    string username = 1;
    string name = 2;
}

// ---- Raft Message Definitions ----
message VoteRequest {
    int32 term = 1;
    string candidate_id = 2;
    int32 last_log_index = 3;
    int32 last_log_term = 4;
}

message VoteResponse {
    int32 term = 1;
    bool vote_granted = 2;
}

message AppendEntriesRequest {
    int32 term = 1;
    string leader_id = 2;
    int32 prev_log_index = 3;
    int32 prev_log_term = 4;
    repeated LogEntry entries = 5;
    int32 commit_index = 6;
}

message AppendEntriesResponse {
    int32 term = 1;
    bool success = 2;
    string node_id = 3;
}

message LogEntry {
    int32 term = 1;
    string data = 2;
}

message Empty {}

message LeaderInfo {
    string leader_address = 1;
}

message UploadFileAllRequest {
    string filename = 1;
    bytes data = 2;
}

message UploadFileAllResponse {
    string status = 1;
}